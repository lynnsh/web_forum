@model WebForum.Models.Thread

@{
    ViewBag.Title = "Create New Thread";
}

<h2>Create New Thread</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.thread_title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.thread_title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.thread_title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.thread_text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.thread_text, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.thread_text, "", new { @class = "text-danger" })
            </div>
        </div>

       <div class="form-group">
        @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (ViewBag.Tags.Count > 0) 
            {
                int count = 0;
                foreach (var item in ViewBag.Tags)
                {
                   <label for=@item.tag_name class="checkbox-inline">
                   <input type="checkbox" name="tags" value=@item.tag_name id=@item.tag_name />
                   @item.tag_name
                   </label>
                   count++;
                   if(count % 8 == 0)
                       {<br />}
                }
                <br /><br />
            
                <label for="tag">and/or add a new tag:</label>
                <br /> 
            }
                <input type="text" name="tag" id="tag" class="form-control" />
                @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
            </div>
        </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div class="btn btn-primary btn-md">
        @Html.ActionLink("Back to Home", "Index")
    </div>

    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
